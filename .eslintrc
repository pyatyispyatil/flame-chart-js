{
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"project": "./tsconfig.json"
	},
	"plugins": ["prettier", "@typescript-eslint"],
	"extends": [
		"prettier"
	],
	"rules": {
		"prettier/prettier": "error",
		"no-useless-return": "error",
		"no-unreachable": "error",
		"eqeqeq": "error",
		"no-else-return": "error",
		"no-extra-boolean-cast": "error",
		"no-implicit-coercion": "error",
		"no-lonely-if": "error",
		"no-unneeded-ternary": "error",
		"no-var": "error",
		"prefer-const": "error",
		"array-callback-return": "error",
		"constructor-super": "error",
		"getter-return": "error",
		"no-async-promise-executor": "error",
		"no-cond-assign": "error",
		"no-const-assign": "error",
		"no-constant-condition": "error",
		"no-constructor-return": "error",
		"no-control-regex": "error",
		"no-dupe-args": "error",
		"no-dupe-class-members": "error",
		"no-dupe-else-if": "error",
		"no-dupe-keys": "error",
		"no-duplicate-case": "error",
		"no-duplicate-imports": "error",
		"no-empty-character-class": "error",
		"no-empty-pattern": "error",
		"no-ex-assign": "error",
		"no-fallthrough": "error",
		"no-func-assign": "error",
		"no-import-assign": "error",
		"no-inner-declarations": "error",
		"no-invalid-regexp": "error",
		"no-irregular-whitespace": "error",
		"no-self-assign": "error",
		"no-self-compare": "error",
		"no-setter-return": "error",

		// TS rules
		"@typescript-eslint/prefer-optional-chain": "error",
		"@typescript-eslint/no-unused-vars": "error",
		"@typescript-eslint/no-unused-expressions": "error",
		"@typescript-eslint/no-unnecessary-type-arguments": "error",
		"@typescript-eslint/no-unnecessary-type-assertion": "error",
		"@typescript-eslint/no-unnecessary-type-constraint": "error",
		"@typescript-eslint/no-useless-constructor": "error",
		"@typescript-eslint/no-useless-empty-export": "error",
		"@typescript-eslint/prefer-enum-initializers": "error",
		"@typescript-eslint/no-unnecessary-qualifier": "error",
		"@typescript-eslint/prefer-for-of": "error",
		"@typescript-eslint/consistent-type-imports": ["error", {
			"prefer": "type-imports"
		}]
	}
}
